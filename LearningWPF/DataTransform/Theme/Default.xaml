<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:sys="clr-namespace:System;assembly=System"
					xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
					>
	<!--Global styles starts-->
	<SolidColorBrush x:Key="WindowBgBrush">White</SolidColorBrush>
	<SolidColorBrush x:Key="MainWindowBgBrush">#647180</SolidColorBrush>
	<SolidColorBrush x:Key="DockBorderBrush">Transparent</SolidColorBrush>
	<Color x:Key="ControlColor">#FFF0F0F0</Color>
	<SolidColorBrush x:Key="ControlBrush" Color="{StaticResource ControlColor}" />
	<SolidColorBrush x:Key="ToolBarButtonHover" Color="#FFEEC2" />
	<SolidColorBrush x:Key="ToolBarButtonBorder" Color="#3399ff" />
	<SolidColorBrush x:Key="UncheckedFontBrush">#7a7a7a</SolidColorBrush>
	<SolidColorBrush x:Key="LightBackground" Color="#2D2D30" />
	<SolidColorBrush x:Key="Foreground" options:Freeze="True" Color="#FFFFFF" />
	<SolidColorBrush x:Key="BackgroundSelected" options:Freeze="True" Color="#007ACC" />
	<!--  Menu  -->
	<SolidColorBrush x:Key="MenuSeparatorBorderBrush" options:Freeze="True" Color="#333337" />
	<SolidColorBrush x:Key="MenuItemHighlightedBackground" options:Freeze="True" Color="#3E3E40" />
	<SolidColorBrush x:Key="SubmenuItemBackground" options:Freeze="True" Color="#1B1B1C" />
	<SolidColorBrush x:Key="SubmenuItemBackgroundHighlighted" options:Freeze="True" Color="#333334" />
	<SolidColorBrush x:Key="MenuDisabledForeground" options:Freeze="True" Color="#656565" />
	
	<LinearGradientBrush x:Key="SelectedErrorListViewHeaderBgBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#FF4DC9EC" Offset="0"/>
		<GradientStop Color="#FF4DC9EC" Offset="0.15"/>
		<GradientStop Color="White" Offset="0.15"/>
		<GradientStop Color="White" Offset="1"/>
	</LinearGradientBrush>
	<!--Global styles ends-->

	<!--Windows styles starts-->
	<Style x:Key="MainContentStyle">
		<Setter Property="Control.Background" Value="{StaticResource WindowBgBrush}" />
		<Setter Property="Control.HorizontalAlignment" Value="Stretch" />
		<Setter Property="Control.VerticalAlignment" Value="Stretch" />
	</Style>
	<!--Windows styles ends-->

	<!--style of elements starts-->
	<Style x:Key="LabelTemplate" TargetType="{x:Type Label}">
		<Setter Property="Height" Value="30" />
		<Setter Property="Width" Value="258" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Margin" Value="10,5" />
		<Setter Property="VerticalAlignment" Value= "Center" />
		<Setter Property="Foreground" Value="#FFE75959" />
		<Setter Property="FontFamily" Value="Calibri" />
		<Setter Property="FontSize" Value="15" />
	</Style>

	<!-- Start of Style for Flat ComboBox -->
	<SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
	<SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
	<SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
	<SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
	<SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

	<ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
			<Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

			<Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked" Value="True">
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
				<Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
				<Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
				<Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
				<Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
		<Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="TextElement.Foreground" Value="Black"/>
		<Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="MinWidth" Value="120" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

						<ContentPresenter Name="ContentSite" Margin="3, 1, 23, 1" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
						<TextBox Name="PART_EditableTextBox" Margin="1, 1, 23, 1"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
							<TextBox.Template>
								<ControlTemplate TargetType="TextBox" >
									<Border Name="PART_ContentHost" Focusable="False" />
								</ControlTemplate>
							</TextBox.Template>
						</TextBox>
						<!-- Popup showing items -->
						<Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
							<Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
								<Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
								<ScrollViewer Margin="4" SnapsToDevicePixels="True">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
						</Trigger>
						<Trigger Property="ComboBox.IsEditable" Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
							<Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
							<Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- End of Style for Flat ComboBox -->
	<Style x:Key="CheckableToggleButtonStyle" TargetType="{x:Type Control}">
		<Setter Property="Foreground" Value="{StaticResource UncheckedFontBrush}" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="Height" Value="32" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Name="bd"
                            Background="{TemplateBinding Background}"
					        BorderBrush="LightGray"
					        BorderThickness="0 1 1 1"
					        Padding="{TemplateBinding Padding}"
					        SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Background" Value="{StaticResource SelectedErrorListViewHeaderBgBrush}" />
							<Setter Property="Margin" Value="0,-1,0,0" />
							<Setter Property="Padding" Value="2,3,2,5" />
							<Setter Property="BorderThickness" Value="0 0 1 0" TargetName="bd"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true"></Condition>
								<Condition Property="IsChecked" Value="true"></Condition>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource SelectedErrorListViewHeaderBgBrush}" />
							<Setter Property="Margin" Value="0,-1,0,0" />
							<Setter Property="Padding" Value="2,3,2,5" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true"></Condition>
								<Condition Property="IsChecked" Value="false"></Condition>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="#EAEAEA" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!--style of elements ends-->

	<!--Image resources starts-->
	<BitmapImage x:Key="ErrorIconImage" UriSource="{StaticResource ResourceKey=ErrorIconSource}" />
	<BitmapImage x:Key="WarningIconImage" UriSource="{StaticResource ResourceKey=WarningIconSource}" />
	<sys:Uri x:Key="ErrorIconSource">pack://application:,,,/DataTransform.Resources;component/Images/Error.png</sys:Uri>
	<sys:Uri x:Key="WarningIconSource">pack://application:,,,/DataTransform.Resources;component/Images/Warning.png</sys:Uri>
	<!--Image resources ends-->
</ResourceDictionary>